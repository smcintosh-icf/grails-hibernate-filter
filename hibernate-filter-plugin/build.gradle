buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version "1.0.0"
group 'org.grails.plugin'

apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    maven { url "https://repo.grails.org/grails/core" }
    maven { url 'https://jitpack.io' }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.grails:grails-plugin-interceptors"
    compile "com.github.jitpack:gradle-simple:1.0.5"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:plugin"
    testCompile "io.micronaut:micronaut-inject-groovy"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.mockito:mockito-core"

    provided "org.grails.plugins:hibernate5"
    provided "org.hibernate:hibernate-core:5.4.18.Final"
    provided "org.hibernate:hibernate-ehcache:5.4.18.Final"
}


bootRun {
    ignoreExitValue true
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}
// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false

grailsPublish {
    user = ''
    key = ''
    userOrg = 'grails'
    repo = 'plugins'
    websiteUrl = 'https://github.com/yvdlima/grails-hibernate-filter'
    githubSlug = 'grails-hibernate-filter'
    license {
        name = 'Apache-2.0'
    }
    title = 'Zip City State Plugin'
    issueTrackerUrl = 'https://github.com/yvdlima/grails-hibernate-filter'
    vcsUrl = 'https://github.com/yvdlima/grails-hibernate-filter'
    desc = '''Provides utilities to populate the US City and State from the provided 5 digit Zip code.'''
    developers = [ alexkramer: 'Alex Kramer', ylima: 'Yuri Lima']
}